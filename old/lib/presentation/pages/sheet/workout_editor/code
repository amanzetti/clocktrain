  // Row(
                //   children: [
                //     Flexible(
                //       child: AppTextFiled(
                //         labelText: 'Duration',
                //         controller: _durationControler,
                //         enabled: true,
                //         readOnly: true,
                //         onTap: () => showCupertinoTimerPicker(
                //           context,
                //           _durationControler,
                //           TimePickerType.minuteSecond,
                //         ),
                //       ),
                //     ),
                //     const SpacerSizedBox(
                //         spacerType: SpacerType.horizontal,
                //         spacerSize: SpacerSize.medium),
                //     Flexible(
                //       child: AppTextFiled(
                //         labelText: 'Set',
                //         controller: _setControler,
                //         enabled: true,
                //         readOnly: true,
                //         onTap: () => showCupertinoTimerPicker(
                //             context, _setControler, TimePickerType.interval),
                //       ),
                //     ),
                //   ],
                // ),
                // const SpacerSizedBox(
                //     spacerType: SpacerType.vertical,
                //     spacerSize: SpacerSize.medium),
                // HeaderWithActionButton(
                //     title: 'Rep',
                //     onTap: () {
                //       // ref.read(providerReps.notifier).addRepRow();
                //       ref
                //           .read(repTextControllerPairProvider.notifier)
                //           .addControllerPair();
                //     }),
                // _repList(context, ref),
                // AppElevatedButton(
                //   onPressed: () {
                //     print(_muscelGroupControler);
                //     // final set = model.Set(
                //     //   setNumber: 1,
                //     //   reps: _getReps(ref) ?? [],
                //     // );

                //     // final exercise = Exercise(
                //     //   name: _nameControler.text,
                //     //   targetMuscle: 'targetMuscle',
                //     //   videoUrl: '',
                //     //   duration:
                //     //       Duration(seconds: int.parse(_durationControler.text)),
                //     //   sets: [set],
                //     // );
                //     // // final rep = ref.read(repTextControllerPairProvider.notifier);
                //     // // final a = rep.controllerPairValues;
                //     // // print('SAVE');
                //     // // print(_nameControler.text);
                //     // // print(_durationControler.text);
                //     // // print(_setControler.text);
                //     // // print(a);
                //     // print(exercise);
                //   },
                //   text: 'SAVE',
                // ),

                // List<Rep>? _getReps(WidgetRef ref) {
  //   final rep = ref.read(repTextControllerPairProvider.notifier);
  //   final value = rep.controllerPairValues;
  //   List<Rep> reps = [];

  //   for (var v in value) {
  //     final repNumber = int.parse(v[0]);
  //     final restTime = Duration(seconds: int.parse(v[1]));
  //     final weight = int.parse(v[2]);
  //     final rep = Rep(repNumber: repNumber, restTime: restTime, weight: weight);
  //     reps.add(rep);
  //   }
  //   return reps;
  // }

  Widget _repList(BuildContext context, WidgetRef ref) {
    final List<TextControllerPair> exercisePairProvider =
        ref.watch(repTextControllerPairProvider);
    return Wrap(
      children: [
        for (var pair in exercisePairProvider)
          Row(
            key: pair.key,
            children: [
              Flexible(
                child: AppTextFiled(
                  labelText: 'Num',
                  controller: pair.controllers[0],
                  enabled: true,
                ),
              ),
              const SpacerSizedBox(
                spacerType: SpacerType.horizontal,
                spacerSize: SpacerSize.medium,
              ),
              Flexible(
                child: AppTextFiled(
                  labelText: 'Weight',
                  controller: pair.controllers[1],
                  enabled: true,
                ),
              ),
              const SpacerSizedBox(
                spacerType: SpacerType.horizontal,
                spacerSize: SpacerSize.medium,
              ),
              Flexible(
                child: AppTextFiled(
                  labelText: 'Rest Time',
                  controller: pair.controllers[2],
                  enabled: true,
                ),
              ),
              const SpacerSizedBox(
                spacerType: SpacerType.horizontal,
                spacerSize: SpacerSize.medium,
              ),
              IconButton(
                  onPressed: () {
                    ref
                        .read(repTextControllerPairProvider.notifier)
                        .removeControllerPair(pair.key);
                  },
                  icon: AppAsset().cancelSvg(context))
            ],
          ),
      ],
    );
  }